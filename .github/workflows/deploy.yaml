name: Deploy to Databricks

on:
  push:
    branches:
      - main

jobs:
  CD:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install azure-identity azure-keyvault-secrets requests databricks-cli

    - name: Retrieve secrets from Azure Key Vault
      env:
        AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        AZURE_KEY_VAULT_NAME: ${{ secrets.AZURE_KEY_VAULT_NAME }}
      run: |
        echo "Retrieving secrets from Azure Key Vault..."
        python - <<EOF
        import os
        from azure.identity import DefaultAzureCredential
        from azure.keyvault.secrets import SecretClient

        key_vault_name = os.getenv("AZURE_KEY_VAULT_NAME")
        key_vault_uri = f"https://{key_vault_name}.vault.azure.net"

        credential = DefaultAzureCredential()
        client = SecretClient(vault_url=key_vault_uri, credential=credential)

        databricks_host = client.get_secret("cdv-big-data-adb-url").value
        databricks_token = client.get_secret("cdv-big-data-adb-token").value
        git_repo_url = client.get_secret("cdv-big-data-git-url").value
        git_branch = client.get_secret("cdv-big-data-git-branch").value

      with open(os.getenv("GITHUB_ENV"), "a") as env_file:
          env_file.write(f"DATABRICKS_HOST={databricks_host}\n")
          env_file.write(f"DATABRICKS_TOKEN={databricks_token}\n")
          env_file.write(f"GIT_REPO_URL={git_repo_url}\n")
          env_file.write(f"GIT_BRANCH={git_branch}\n")
          EOF

    - name: Configure Databricks CLI
      run: |
        databricks configure --token <<EOF
          ${{ env.DATABRICKS_HOST }}
          ${{ env.DATABRICKS_TOKEN }}
          EOF

    - name: Clone Git repository
      run: |
        git clone ${{ env.GIT_REPO_URL }} --branch ${{ env.GIT_BRANCH }} --single-branch

    - name: Deploy to Databricks
      run: |
        repo_name=$(basename ${{ env.GIT_REPO_URL }} .git)
        cd $repo_name
        databricks workspace import_dir . /cdv_big_data/ --overwrite